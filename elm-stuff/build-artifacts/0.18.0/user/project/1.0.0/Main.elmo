var _user$project$Main$refact = function (x) {
	return A3(
		_elm_lang$core$List$foldl,
		F2(
			function (x, y) {
				return x * y;
			}),
		1,
		A2(_elm_lang$core$List$range, 1, x));
};
var _user$project$Main$fact = function (x) {
	return _elm_lang$core$Native_Utils.eq(x, 1) ? x : (x * _user$project$Main$fact(x - 1));
};
var _user$project$Main$factTo = function (n) {
	return A2(
		_elm_lang$core$List$map,
		_user$project$Main$fact,
		A2(_elm_lang$core$List$range, 1, n));
};
var _user$project$Main$main = _elm_lang$virtual_dom$Native_VirtualDom.staticProgram(
	A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('outer'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$ol,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$id('messages'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$li,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(
								A2(
									_elm_lang$core$Basics_ops['++'],
									'Factorial: ',
									function (_p0) {
										return _elm_lang$core$Basics$toString(
											_user$project$Main$fact(_p0));
									}(5))),
							_1: {ctor: '[]'}
						}),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$li,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'Factorial to: ',
										function (_p1) {
											return _elm_lang$core$Basics$toString(
												_user$project$Main$factTo(_p1));
										}(5))),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$li,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(
										A2(
											_elm_lang$core$Basics_ops['++'],
											'Factorial Refactor: ',
											function (_p2) {
												return _elm_lang$core$Basics$toString(
													_user$project$Main$refact(_p2));
											}(5))),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: A2(
									_elm_lang$html$Html$li,
									{ctor: '[]'},
									{
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$a,
											{
												ctor: '::',
												_0: _elm_lang$html$Html_Attributes$href('http://elm-lang.org'),
												_1: {ctor: '[]'}
											},
											{
												ctor: '::',
												_0: _elm_lang$html$Html$text('Elm Programming Lang'),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}),
								_1: {ctor: '[]'}
							}
						}
					}
				}),
			_1: {ctor: '[]'}
		}));
var _user$project$Main$myFoo = F2(
	function (x, y) {
		return {ctor: '_Tuple2', _0: y, _1: x};
	});
var _user$project$Main$myNumber = 42;
